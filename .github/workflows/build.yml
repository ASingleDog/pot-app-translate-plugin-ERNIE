name: Build
on: push

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
      - name: check
        run: cargo check --all --all-targets
  build-for-windows:
    needs: check
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        target:
          [
            x86_64-pc-windows-msvc,
            i686-pc-windows-msvc,
            aarch64-pc-windows-msvc,
          ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
      - name: install toolchain
        run: |
          rustup target add ${{ matrix.target }}
          rustup toolchain install --force-non-host stable-${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/plugin.dll
          if-no-files-found: error
  build-for-macos:
    needs: check
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest]
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
      - name: install toolchain
        run: |
          rustup target add ${{ matrix.target }}
          rustup toolchain install --force-non-host stable-${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Rename
        run: sudo mv target/${{ matrix.target }}/release/libplugin.dylib target/${{ matrix.target }}/release/plugin.dylib
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/plugin.dylib
          if-no-files-found: error
  build-for-linux:
    needs: check
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        target:
          [
            x86_64-unknown-linux-gnu,
            i686-unknown-linux-gnu,
            aarch64-unknown-linux-gnu,
            armv7-unknown-linux-gnueabihf,
          ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Build for Linux
        uses: ./build-for-linux
        with:
          target: ${{ matrix.target }}
          toolchain: stable-${{ matrix.target }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/plugin.so
          if-no-files-found: error
